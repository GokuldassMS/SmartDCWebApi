// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartDCWebApi.Models;

namespace SmartDCWebApi.Migrations
{
    [DbContext(typeof(SmartDCContext))]
    [Migration("20210903152710_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartDCWebApi.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Company_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AltPhoneNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Alt_Phone_No");

                    b.Property<string>("AltPhoneNoCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Alt_Phone_No_Code");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Name");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GstNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GST_No");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_No");

                    b.Property<string>("PhoneNoCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Phone_No_Code");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Pin_Code");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.HasKey("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AltPhoneNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Alt_Phone_No");

                    b.Property<string>("AltPhoneNoCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Alt_Phone_No_Code");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Customer_Name");

                    b.Property<string>("GstNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GST_No");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_No");

                    b.Property<string>("PhoneNoCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Phone_No_Code");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Pin_Code");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.HasKey("CustomerId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.DeliveryDetail", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChallanNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Challan_No");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Delivery_Date");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PartyDcNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Party_DC_No");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("Purchase_ID");

                    b.Property<string>("VehicleNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Vehicle_No");

                    b.HasKey("DeliveryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Delivery_Details");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.DeliveryDetailParticular", b =>
                {
                    b.Property<int>("DeliveryDetailParticularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Detail_Particular_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_ID");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Particulars")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PendingQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Quantity");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ReturnQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Return_Quantity");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnName("Serial_No");

                    b.Property<string>("Status")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("WashType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Wash_Type");

                    b.HasKey("DeliveryDetailParticularId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeliveryId");

                    b.ToTable("Delivery_Detail_Particulars");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.PurchaseDetail", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Purchase_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<string>("DcNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DC_No");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Purchase_Date");

                    b.Property<string>("StyleNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Style_No");

                    b.Property<string>("VehicleNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Vehicle_No");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.ToTable("Purchase_Details");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.PurchaseDetailParticular", b =>
                {
                    b.Property<int>("PurchaseDetailParticularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Purchase_Detail_Particular_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Particulars")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("Purchase_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int")
                        .HasColumnName("Serial_No");

                    b.Property<string>("Status")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("WashType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Wash_Type");

                    b.HasKey("PurchaseDetailParticularId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Purchase_Detail_Particulars");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("First_Name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Last_Name");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Phone_No");

                    b.Property<string>("PhoneNoCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Phone_No_Code");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("User_Name");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.Company", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("Companies")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Companies___Created_By")
                        .IsRequired();

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.Customer", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Customers___Created_By")
                        .IsRequired();

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.DeliveryDetail", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.Company", "Company")
                        .WithMany("DeliveryDetails")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK___Delivery_Details___Company_ID")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("DeliveryDetails")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Delivery_Details___Created_By")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.Customer", "Customer")
                        .WithMany("DeliveryDetails")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK___Delivery_Details___Customer_ID")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.PurchaseDetail", "Purchase")
                        .WithMany("DeliveryDetails")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("FK___Delivery_Details___Purchase_ID")
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Customer");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.DeliveryDetailParticular", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("DeliveryDetailParticulars")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Delivery_Detail_Particulars___Created_By")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.DeliveryDetail", "Delivery")
                        .WithMany("DeliveryDetailParticulars")
                        .HasForeignKey("DeliveryId")
                        .HasConstraintName("FK___Delivery_Detail_Particulars___Delivery_ID")
                        .IsRequired();

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.PurchaseDetail", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.Company", "Company")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK___Purchase_Details___Company_ID")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Purchase_Details___Created_By")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.Customer", "Customer")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK___Purchase_Details___Customer_ID")
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.PurchaseDetailParticular", b =>
                {
                    b.HasOne("SmartDCWebApi.Models.User", "CreatedByNavigation")
                        .WithMany("PurchaseDetailParticulars")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK___Purchase_Detail_Particulars___Created_By")
                        .IsRequired();

                    b.HasOne("SmartDCWebApi.Models.PurchaseDetail", "Purchase")
                        .WithMany("PurchaseDetailParticulars")
                        .HasForeignKey("PurchaseId")
                        .HasConstraintName("FK___Purchase_Detail_Particulars___Purchase_ID")
                        .IsRequired();

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.Company", b =>
                {
                    b.Navigation("DeliveryDetails");

                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.Customer", b =>
                {
                    b.Navigation("DeliveryDetails");

                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.DeliveryDetail", b =>
                {
                    b.Navigation("DeliveryDetailParticulars");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.PurchaseDetail", b =>
                {
                    b.Navigation("DeliveryDetails");

                    b.Navigation("PurchaseDetailParticulars");
                });

            modelBuilder.Entity("SmartDCWebApi.Models.User", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Customers");

                    b.Navigation("DeliveryDetailParticulars");

                    b.Navigation("DeliveryDetails");

                    b.Navigation("PurchaseDetailParticulars");

                    b.Navigation("PurchaseDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
